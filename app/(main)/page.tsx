"use client";

import Image from "next/image";
import Link from "next/link";
import { motion } from "framer-motion";
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import {
  stadiumHero,
  memeBongDa,
  landingAvatar1,
  landingAvatar2,
  landingAvatar3,
} from "@/assets/images";

export default function HomePage() {
  return (
    <div className="flex flex-col min-h-screen">
      {/* Hero Section */}
      <section className="relative py-20 overflow-hidden">
        {/* Background with overlay */}
        <div className="absolute inset-0 z-0 rounded-md overflow-hidden">
          <Image
            src={stadiumHero}
            alt="Football stadium"
            fill
            className="object-cover"
            priority
          />
          <div className="absolute inset-0 bg-gradient-to-r from-blue-900/80 to-green-900/80" />
        </div>

        <div className="container relative z-10 mx-auto px-4">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5 }}
            className="text-center max-w-3xl mx-auto text-white"
          >
            <h1 className="text-5xl md:text-6xl font-extrabold mb-6 tracking-tight">
              AI Football{" "}
              <span className="bg-clip-text text-transparent bg-gradient-to-r from-blue-400 to-green-400">
                Predictor
              </span>
            </h1>
            <p className="text-xl md:text-2xl mb-8">
              D·ª± ƒëo√°n k·∫øt qu·∫£ b√≥ng ƒë√° v·ªõi ƒë·ªô ch√≠nh x√°c cao nh·ªù tr√≠ tu·ªá nh√¢n t·∫°o
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button
                size="lg"
                className="bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800"
                asChild
              >
                <Link href="/sign-up">ƒêƒÉng k√Ω ngay</Link>
              </Button>
              <Button
                size="lg"
                variant="outline"
                className="border-white text-black hover:bg-white/10"
                asChild
              >
                <Link href="/predictions">Xem d·ª± ƒëo√°n m·ªõi nh·∫•t</Link>
              </Button>
            </div>
          </motion.div>

          {/* Floating stats */}
          <motion.div
            initial={{ opacity: 0, y: 40 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.7, delay: 0.3 }}
            className="mt-16 grid grid-cols-2 md:grid-cols-4 gap-4 text-center"
          >
            {[
              { value: "90%", label: "ƒê·ªô ch√≠nh x√°c" },
              { value: "10K+", label: "Ng∆∞·ªùi d√πng" },
              { value: "50K+", label: "D·ª± ƒëo√°n" },
              { value: "24/7", label: "H·ªó tr·ª£" },
            ].map((stat, i) => (
              <div
                key={i}
                className="bg-white/10 backdrop-blur-sm rounded-lg p-4"
              >
                <div className="text-3xl font-bold text-white">
                  {stat.value}
                </div>
                <div className="text-blue-200">{stat.label}</div>
              </div>
            ))}
          </motion.div>
        </div>
      </section>

      {/* How it works */}
      <section className="py-20 bg-gradient-to-b from-slate-50 to-white">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-3xl md:text-4xl font-bold mb-4">
              L√†m th·∫ø n√†o AI d·ª± ƒëo√°n b√≥ng ƒë√°?
            </h2>
            <p className="text-lg text-gray-600 max-w-2xl mx-auto">
              C√¥ng ngh·ªá AI ti√™n ti·∫øn ph√¢n t√≠ch h√†ng tri·ªáu d·ªØ li·ªáu ƒë·ªÉ ƒë∆∞a ra d·ª±
              ƒëo√°n ch√≠nh x√°c
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {[
              {
                title: "Thu th·∫≠p d·ªØ li·ªáu",
                description:
                  "H·ªá th·ªëng thu th·∫≠p d·ªØ li·ªáu t·ª´ h√†ng ngh√¨n tr·∫≠n ƒë·∫•u, th√¥ng tin c·∫ßu th·ªß, ƒë·ªôi b√≥ng v√† c√°c y·∫øu t·ªë kh√°c",
                icon: "üìä",
              },
              {
                title: "Ph√¢n t√≠ch AI",
                description:
                  "M√¥ h√¨nh h·ªçc m√°y ti√™n ti·∫øn ph√¢n t√≠ch c√°c m·∫´u v√† xu h∆∞·ªõng t·ª´ d·ªØ li·ªáu l·ªãch s·ª≠",
                icon: "üß†",
              },
              {
                title: "D·ª± ƒëo√°n ch√≠nh x√°c",
                description:
                  "K·∫øt qu·∫£ d·ª± ƒëo√°n ƒë∆∞·ª£c ƒë∆∞a ra v·ªõi t·ª∑ l·ªá ch√≠nh x√°c cao, gi√∫p b·∫°n ƒë∆∞a ra quy·∫øt ƒë·ªãnh s√°ng su·ªët",
                icon: "üéØ",
              },
            ].map((step, i) => (
              <motion.div
                key={i}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5, delay: i * 0.1 }}
                viewport={{ once: true }}
                className="bg-white rounded-xl shadow-lg p-6 hover:shadow-xl transition-shadow"
              >
                <div className="text-4xl mb-4">{step.icon}</div>
                <h3 className="text-xl font-semibold mb-3">{step.title}</h3>
                <p className="text-gray-600">{step.description}</p>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* Features Tabs */}
      <section className="py-20 bg-slate-50">
        <div className="container mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="text-3xl md:text-4xl font-bold mb-4">
              T√≠nh nƒÉng n·ªïi b·∫≠t
            </h2>
            <p className="text-lg text-gray-600 max-w-2xl mx-auto">
              Kh√°m ph√° c√°c t√≠nh nƒÉng ƒë·ªôc ƒë√°o gi√∫p b·∫°n d·ª± ƒëo√°n b√≥ng ƒë√° t·ªët h∆°n
            </p>
          </div>

          <Tabs defaultValue="predictions" className="max-w-4xl mx-auto">
            <TabsList className="grid w-full grid-cols-3 mb-8">
              <TabsTrigger value="predictions">D·ª± ƒëo√°n AI</TabsTrigger>
              <TabsTrigger value="challenges">Th√°ch ƒë·∫•u</TabsTrigger>
              <TabsTrigger value="analysis">Ph√¢n t√≠ch chuy√™n s√¢u</TabsTrigger>
            </TabsList>
            <TabsContent value="predictions" className="mt-0">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-8 items-center">
                <div>
                  <h3 className="text-2xl font-bold mb-4">
                    D·ª± ƒëo√°n AI ch√≠nh x√°c
                  </h3>
                  <ul className="space-y-3">
                    {[
                      "D·ª± ƒëo√°n t·ª∑ s·ªë ch√≠nh x√°c v·ªõi ƒë·ªô tin c·∫≠y cao",
                      "C·∫≠p nh·∫≠t li√™n t·ª•c d·ª±a tr√™n d·ªØ li·ªáu m·ªõi nh·∫•t",
                      "Ph√¢n t√≠ch c√°c y·∫øu t·ªë ·∫£nh h∆∞·ªüng ƒë·∫øn k·∫øt qu·∫£ tr·∫≠n ƒë·∫•u",
                      "Th·ªëng k√™ chi ti·∫øt v·ªÅ l·ªãch s·ª≠ ƒë·ªëi ƒë·∫ßu",
                    ].map((item, i) => (
                      <li key={i} className="flex items-start">
                        <span className="text-green-500 mr-2">‚úì</span>
                        <span>{item}</span>
                      </li>
                    ))}
                  </ul>
                  <Button className="mt-6 bg-blue-600 hover:bg-blue-700">
                    Xem d·ª± ƒëo√°n
                  </Button>
                </div>
                <div className="rounded-lg overflow-hidden shadow-lg">
                  <Image
                    src={memeBongDa}
                    alt="AI Predictions"
                    width={500}
                    height={300}
                    className="w-full h-auto"
                  />
                </div>
              </div>
            </TabsContent>
            <TabsContent value="challenges" className="mt-0">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-8 items-center">
                <div className="rounded-lg overflow-hidden shadow-lg">
                  <Image
                    src={memeBongDa}
                    alt="Challenges"
                    width={500}
                    height={300}
                    className="w-full h-auto"
                  />
                </div>
                <div>
                  <h3 className="text-2xl font-bold mb-4">
                    Th√°ch ƒë·∫•u c√πng b·∫°n b√®
                  </h3>
                  <ul className="space-y-3">
                    {[
                      "T·∫°o v√† tham gia c√°c th√°ch ƒë·∫•u d·ª± ƒëo√°n v·ªõi b·∫°n b√®",
                      "B·∫£ng x·∫øp h·∫°ng th·ªùi gian th·ª±c",
                      "Gi·∫£i th∆∞·ªüng h·∫•p d·∫´n cho ng∆∞·ªùi chi·∫øn th·∫Øng",
                      "Chia s·∫ª k·∫øt qu·∫£ l√™n m·∫°ng x√£ h·ªôi",
                    ].map((item, i) => (
                      <li key={i} className="flex items-start">
                        <span className="text-blue-500 mr-2">‚úì</span>
                        <span>{item}</span>
                      </li>
                    ))}
                  </ul>
                  <Button className="mt-6 bg-blue-600 hover:bg-blue-700">
                    Tham gia th√°ch ƒë·∫•u
                  </Button>
                </div>
              </div>
            </TabsContent>
            <TabsContent value="analysis" className="mt-0">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-8 items-center">
                <div>
                  <h3 className="text-2xl font-bold mb-4">
                    Ph√¢n t√≠ch chuy√™n s√¢u
                  </h3>
                  <ul className="space-y-3">
                    {[
                      "Ph√¢n t√≠ch chi ti·∫øt v·ªÅ phong ƒë·ªô ƒë·ªôi b√≥ng",
                      "Th·ªëng k√™ c·∫ßu th·ªß v·ªõi c√°c ch·ªâ s·ªë quan tr·ªçng",
                      "Bi·ªÉu ƒë·ªì tr·ª±c quan h√≥a d·ªØ li·ªáu",
                      "B√°o c√°o chuy√™n s√¢u v·ªÅ chi·∫øn thu·∫≠t",
                    ].map((item, i) => (
                      <li key={i} className="flex items-start">
                        <span className="text-purple-500 mr-2">‚úì</span>
                        <span>{item}</span>
                      </li>
                    ))}
                  </ul>
                  <Button className="mt-6 bg-blue-600 hover:bg-blue-700">
                    Xem ph√¢n t√≠ch
                  </Button>
                </div>
                <div className="rounded-lg overflow-hidden shadow-lg">
                  <Image
                    src={memeBongDa}
                    alt="Analysis"
                    width={500}
                    height={300}
                    className="w-full h-auto"
                  />
                </div>
              </div>
            </TabsContent>
          </Tabs>
        </div>
      </section>

      {/* Testimonials */}
      <section className="py-20 bg-gradient-to-b from-white to-slate-50">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-3xl md:text-4xl font-bold mb-4">
              Ng∆∞·ªùi d√πng n√≥i g√¨ v·ªÅ ch√∫ng t√¥i
            </h2>
            <p className="text-lg text-gray-600 max-w-2xl mx-auto">
              H√†ng ngh√¨n ng∆∞·ªùi d√πng ƒë√£ tin t∆∞·ªüng v√† s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa ch√∫ng
              t√¥i
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {[
              {
                name: "Ph·∫°m Min Ch√≠n",
                role: "Fan b√≥ng ƒë√° l√¢u nƒÉm",
                content:
                  "T√¥i ƒë√£ th·ª≠ nhi·ªÅu n·ªÅn t·∫£ng d·ª± ƒëo√°n b√≥ng ƒë√° nh∆∞ng AI Football Predictor l√† t·ªët nh·∫•t. ƒê·ªô ch√≠nh x√°c c·ªßa c√°c d·ª± ƒëo√°n th·ª±c s·ª± ·∫•n t∆∞·ª£ng!",
                avatar: landingAvatar1,
              },
              {
                name: "L√¢m T√¥",
                role: "Ng∆∞·ªùi ch∆°i c√° coi",
                content:
                  "Nh·ªù c√≥ AI Football Predictor, t√¥i ƒë√£ c·∫£i thi·ªán ƒë√°ng k·ªÉ t·ª∑ l·ªá th·∫Øng c·ªßa m√¨nh. Ph√¢n t√≠ch chuy√™n s√¢u gi√∫p t√¥i ƒë∆∞a ra quy·∫øt ƒë·ªãnh s√°ng su·ªët h∆°n.",
                avatar: landingAvatar2,
              },
              {
                name: "Elon Musk",
                role: "HLV b√≥ng ƒë√° nghi·ªáp d∆∞",
                content:
                  "T√¥i s·ª≠ d·ª•ng n·ªÅn t·∫£ng n√†y ƒë·ªÉ ph√¢n t√≠ch ƒë·ªëi th·ªß v√† l√™n chi·∫øn thu·∫≠t. D·ªØ li·ªáu chi ti·∫øt v√† d·ª± ƒëo√°n ch√≠nh x√°c ƒë√£ gi√∫p ƒë·ªôi c·ªßa t√¥i r·∫•t nhi·ªÅu.",
                avatar: landingAvatar3,
              },
            ].map((testimonial, i) => (
              <motion.div
                key={i}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5, delay: i * 0.1 }}
                viewport={{ once: true }}
                className="bg-white p-6 rounded-xl shadow-lg"
              >
                <div className="flex items-center mb-4">
                  <Image
                    src={testimonial.avatar}
                    alt={testimonial.name}
                    width={50}
                    className="rounded-full mr-4 aspect-square object-cover"
                  />
                  <div>
                    <h4 className="font-semibold">{testimonial.name}</h4>
                    <p className="text-sm text-gray-500">{testimonial.role}</p>
                  </div>
                </div>
                <p className="text-gray-600 italic">
                  &ldquo;{testimonial.content}&rdquo;
                </p>
                <div className="mt-4 text-yellow-400">‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ</div>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 bg-gradient-to-r from-blue-600 to-blue-800 text-white rounded-md">
        <div className="container mx-auto px-4 text-center">
          <motion.div
            initial={{ opacity: 0, scale: 0.9 }}
            whileInView={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.5 }}
            viewport={{ once: true }}
          >
            <h2 className="text-3xl md:text-4xl font-bold mb-6">
              S·∫µn s√†ng ƒë·ªÉ d·ª± ƒëo√°n ch√≠nh x√°c h∆°n?
            </h2>
            <p className="text-xl mb-8 max-w-2xl mx-auto">
              ƒêƒÉng k√Ω ngay h√¥m nay v√† nh·∫≠n 7 ng√†y d√πng th·ª≠ mi·ªÖn ph√≠ v·ªõi ƒë·∫ßy ƒë·ªß
              t√≠nh nƒÉng!
            </p>
            <Button
              size="lg"
              className="bg-white text-blue-700 hover:bg-blue-50"
              asChild
            >
              <Link href="/sign-up">B·∫Øt ƒë·∫ßu ngay - Mi·ªÖn ph√≠</Link>
            </Button>
            <p className="mt-4 text-sm text-blue-200">
              Kh√¥ng c·∫ßn th·∫ª t√≠n d·ª•ng. H·ªßy b·∫•t k·ª≥ l√∫c n√†o.
            </p>
          </motion.div>
        </div>
      </section>

      {/* Fun Football Facts */}
      <section className="py-16 bg-slate-50">
        <div className="container mx-auto px-4">
          <div className="text-center mb-10">
            <h2 className="text-2xl font-bold">Nh·ªØng ƒëi·ªÅu th√∫ v·ªã v·ªÅ b√≥ng ƒë√°</h2>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {[
              {
                fact: "Qu·∫£ b√≥ng ƒë·∫ßu ti√™n ƒë∆∞·ª£c l√†m t·ª´ b√†ng quang l·ª£n",
                icon: "üê∑",
              },
              {
                fact: "Tr·∫≠n ƒë·∫•u d√†i nh·∫•t k√©o d√†i 3 ng√†y 3 ƒë√™m",
                icon: "‚è∞",
              },
              {
                fact: "C·∫ßu th·ªß ch·∫°y trung b√¨nh 9.5km m·ªói tr·∫≠n",
                icon: "üèÉ",
              },
              {
                fact: "World Cup 2022 c√≥ 5 t·ª∑ ng∆∞·ªùi xem tr√™n to√†n c·∫ßu",
                icon: "üåç",
              },
            ].map((item, i) => (
              <Card
                key={i}
                className="p-4 text-center hover:bg-blue-50 transition-colors cursor-pointer"
              >
                <div className="text-3xl mb-2">{item.icon}</div>
                <p>{item.fact}</p>
              </Card>
            ))}
          </div>
        </div>
      </section>
    </div>
  );
}
